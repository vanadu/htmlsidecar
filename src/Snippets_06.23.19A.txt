

      for(var i in ccpMakeClipBut) {
          // !VA loop through the second-level objects, the objects that contain the id and func properties.
          if(ccpMakeClipBut.hasOwnProperty(i)){
            console.log('ccpMakeClipBut[i] is: ' + ccpMakeClipBut[i]);
            console.log('ccpMakeClipBut[i].id is: ' + ccpMakeClipBut[i].id);
            // !VA If the value of id equals value in makeClipButID (the event target) then run the function associated with that ID.
            if (ccpMakeClipBut[i].id == makeClipButID) {
              console.log('match');
              runme = ccpMakeClipBut[i].func;
              console.log('runme is: ' + runme);
              runme();
            }

          }
      }


        console.log('runMe running');
        var foo = {
        // !VA Build HTML Clipboard Buttons
        img: {
          id: '#ccp-img-build-html-but',
          func: function() {
            console.log('this is ccpImgWriteHTMLToCB');
          }
        },
        td: {
          id: '#ccp-td-build-html-but',
          func: function() {
            console.log('this is ccpTdWriteHTMLToCB');
          }
        },
        table: {
          id: '#ccp-table-build-html-but',
          func: function() {
            console.log('this is ccpTableWriteHTMLToCB');
          }
        }
      };
      // console.log('foo.img.id is: ' + foo.img.id); 
      for(var i in foo) {
          if(foo.hasOwnProperty(i)){
            console.log('foo[i].id is: ' + foo[i].id);
            foo[i].func();
          }
      }


    var ccpMakeClipBut = {
      // !VA Build HTML Clipboard Buttons
      ccpImgWriteHTMLToCB: {
        id: '#ccp-img-build-html-but',
        func: function() {
          getImgWriteHTMLToCB();
        }
      },
      ccpTdWriteHTMLToCB: {
        id: '#ccp-td-build-html-but',
        func: function() {
          ccpTdWriteHTMLToCB();
        }
      },
      ccpTableWriteHTMLToCB: {
        id: '#ccp-table-build-html-but',
        func: function() {
          getTableWriteHTMLToCB();
        }
      },
      // !VA Make CSS Clip Buttons
      imgDisplayWriteCSSToCB: {
        id: '#ccp-img-display-css-to-clipboard-but',
        func: function() {
          getImgDisplayWriteCSSToCB();
        }
      },
      imgSPhoneWriteCSSToCB: {
        id: '#ccp-img-sphone-css-to-clipboard-but',
        func: function() {
          getImgSPhoneWriteCSSToCB();
        }
      },
      imgLPhoneWriteCSSToCB: {
        id: '#ccp-img-lphone-css-to-clipboard-but',
        func: function() {
          getImgLPhoneWriteCSSToCB();
        }
      },
      tdDisplayWriteCSSToCB: {
        id: '#ccp-td-display-css-to-clipboard-but',
        func: function() {
          getTdDisplayWriteCSSToCB();
        }
      },
      tdSPhoneWriteCSSToCB: {
        id: '#ccp-td-sphone-css-to-clipboard-but',
        func: function() {
          getTdSPhoneWriteCSSToCB();
        }
      },
      tdLPhoneWriteCSSToCB: {
        id: '#ccp-td-lphone-css-to-clipboard-but',
        func: function() {
          getTdLPhoneWriteCSSToCB();
        }
      },
      tableDisplayWriteCSSToCB: {
        id: '#ccp-table-display-css-to-clipboard-but',
        func: function() {
          getTableDisplayWriteCSSToCB();
        }
      },
      tableSPhoneWriteCSSToCB: {
        id: '#ccp-table-sphone-css-to-clipboard-but',
        func: function() {
          getTableSPhoneWriteCSSToCB();
        }
      },
      tableLPhoneWriteCSSToCB: {
        id: '#ccp-table-lphone-css-to-clipboard-but',
        func: function() {
          getTableLPhoneWriteCSSToCB();
        }
      },
